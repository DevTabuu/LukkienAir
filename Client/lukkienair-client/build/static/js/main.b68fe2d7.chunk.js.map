{"version":3,"sources":["compontents/Client.js","compontents/Flight.js","compontents/FlightList.js","compontents/DestinationSelector.js","App.js","serviceWorker.js","index.js"],"names":["Client","uri","Promise","resolve","reject","request","XMLHttpRequest","open","onreadystatechange","e","readyState","raw","responseText","objectified","JSON","parse","ignore","send","origin","destination","min","max","date","this","makeRequest","concat","id","Flight","_Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","client","state","originName","flight","route","name","destinationName","inherits","createClass","key","value","react_default","a","createElement","target","rel","href","dateString","formattedDate","departureTime","timeString","minuteFormat","duration","cost","toFixed","numberFormat","getDate","getMonth","getFullYear","getHours","getMinutes","dateTime","dateTimeParts","split","construct","Date","toConsumableArray","number","slice","hours","Math","floor","minutes","Component","FlightList","apply","arguments","flights","map","compontents_Flight","DestinationSelector","ref","el","selector","destinations","App","handleSubmit","originElement","destinationElement","minElement","maxElement","dateElement","then","r","setState","_this2","className","htmlFor","compontents_DestinationSelector","type","placeholder","onClick","compontents_FlightList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uPAAqBA,sGAELC,GAoBR,OAnBa,IAAIC,QAAQ,SAACC,EAASC,GAC/B,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAON,GAAK,GACzBI,EAAQG,mBAAqB,SAACC,GAC1B,GAA0B,IAAvBJ,EAAQK,WAAX,CAID,IAAIC,EAAMN,EAAQO,aACdC,EAAc,GAClB,IACCA,EAAcC,KAAKC,MAAMJ,GACxB,MAAOK,IAETb,EAAQU,KAEXR,EAAQY,yCAMRC,EAAQC,EAAaC,EAAKC,EAAKC,GACnC,OAAOC,KAAKC,YAAL,yBAAAC,OAA0CP,EAA1C,mBAAAO,OAAkEN,EAAlE,aAAAM,OAAyFL,EAAzF,aAAAK,OAAwGJ,EAAxG,mBAAAI,OAA6HH,2CAIpI,OAAOC,KAAKC,YAAL,4DAGIE,GACX,OAAOH,KAAKC,YAAL,eAAAC,OAAgCC,iDAGtBA,GACjB,OAAOH,KAAKC,YAAL,qBAAAC,OAAsCC,aCuBtCC,EA1Df,SAAAC,GAEE,SAAAD,EAAYE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAR,KAAAI,IAChBG,EAAAC,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAAJ,GAAAQ,KAAAZ,KAAMM,KAEDO,OAAS,IAAIpC,EAElB8B,EAAKO,MAAQ,CACXC,WAAYR,EAAKD,MAAMU,OAAOC,MAAMtB,OAAOuB,KAC3CC,gBAAiBZ,EAAKD,MAAMU,OAAOC,MAAMrB,YAAYsB,MAPvCX,EAFpB,OAAAC,OAAAY,EAAA,EAAAZ,CAAAJ,EAAAC,GAAAG,OAAAa,EAAA,EAAAb,CAAAJ,EAAA,EAAAkB,IAAA,SAAAC,MAAA,WAcI,OACEC,EAAAC,EAAAC,cAAA,UAEI,CACAF,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAIE,EAAAC,EAAAC,cAAA,KAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAI,2CAAA3B,OAA6CF,KAAKM,MAAMU,OAAOC,MAAMtB,OAAOuB,KAA5E,QAAAhB,OAAuFF,KAAKM,MAAMU,OAAOC,MAAMrB,YAAYsB,OAASlB,KAAKM,MAAMU,OAAOb,KACnNqB,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAKtB,KAAKM,MAAMU,OAAOC,MAAMtB,OAAOuB,MAC5CM,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAKtB,KAAKM,MAAMU,OAAOC,MAAMrB,YAAYsB,MACjDM,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAKtB,KAAK8B,WAAW9B,KAAK+B,cAAc/B,KAAKM,MAAMU,OAAOgB,iBAClER,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAKtB,KAAKiC,WAAWjC,KAAK+B,cAAc/B,KAAKM,MAAMU,OAAOgB,iBAClER,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAKtB,KAAKkC,aAAalC,KAAKM,MAAMU,OAAOC,MAAMkB,WACvDX,EAAAC,EAAAC,cAAA,MAAIJ,IAAI,KAAR,UAAetB,KAAKM,MAAMU,OAAOoB,KAAKC,QAAQ,QAxBxD,CAAAf,IAAA,aAAAC,MAAA,SA+BaxB,GACT,SAAAG,OAAUF,KAAKsC,aAAavC,EAAKwC,WAAjC,KAAArC,OAA+CF,KAAKsC,aAAavC,EAAKyC,YAAtE,KAAAtC,OAAqFH,EAAK0C,iBAhC9F,CAAAnB,IAAA,aAAAC,MAAA,SAmCaxB,GACT,SAAAG,OAAUF,KAAKsC,aAAavC,EAAK2C,YAAjC,KAAAxC,OAAgDF,KAAKsC,aAAavC,EAAK4C,iBApC3E,CAAArB,IAAA,gBAAAC,MAAA,SAuCgBqB,GACZ,IAAMC,EAAgBD,EAASE,MAAM,UACrC,OAAOtC,OAAAuC,EAAA,EAAAvC,CAAIwC,KAAXxC,OAAAyC,EAAA,EAAAzC,CAAmBqC,MAzCvB,CAAAvB,IAAA,eAAAC,MAAA,SA4Ce2B,GACX,OAAQ,IAAMA,GAAQC,OAAO,KA7CjC,CAAA7B,IAAA,eAAAC,MAAA,SAgDe2B,GAEX,IAAIE,EAAQC,KAAKC,MAAMJ,EAAS,IAC5BK,EAAUL,EAAS,GAEvB,OAAOlD,KAAKsC,aAAac,GAAS,IAAMpD,KAAKsC,aAAaiB,OArD9DnD,EAAA,CAA4BoD,aCwBbC,EAxBf,SAAApD,GAAA,SAAAoD,IAAA,OAAAjD,OAAAC,EAAA,EAAAD,CAAAR,KAAAyD,GAAAjD,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAAiD,GAAAC,MAAA1D,KAAA2D,YAAA,OAAAnD,OAAAY,EAAA,EAAAZ,CAAAiD,EAAApD,GAAAG,OAAAa,EAAA,EAAAb,CAAAiD,EAAA,EAAAnC,IAAA,SAAAC,MAAA,WAGI,OACEC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,oBAGE1B,KAAKM,MAAMsD,QAAQC,IAAI,SAAA7C,GAAM,OAAIQ,EAAAC,EAAAC,cAACoC,EAAD,CAAQxC,IAAKN,EAAOb,GAAIa,OAAQA,YAhBjFyC,EAAA,CAAgCD,aCajBO,EAdf,SAAA1D,GAAA,SAAA0D,IAAA,OAAAvD,OAAAC,EAAA,EAAAD,CAAAR,KAAA+D,GAAAvD,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAAuD,GAAAL,MAAA1D,KAAA2D,YAAA,OAAAnD,OAAAY,EAAA,EAAAZ,CAAAuD,EAAA1D,GAAAG,OAAAa,EAAA,EAAAb,CAAAuD,EAAA,EAAAzC,IAAA,SAAAC,MAAA,WAEa,IAAAhB,EAAAP,KACP,OACIwB,EAAAC,EAAAC,cAAA,UAAQvB,GAAIH,KAAKM,MAAMH,GAAI6D,IAAK,SAAAC,GAAE,OAAI1D,EAAK2D,SAAWD,IAClDzC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,MAAd,QAEEvB,KAAKM,MAAM6D,aAAaN,IAAI,SAAAjE,GAAW,OAAI4B,EAAAC,EAAAC,cAAA,UAAQJ,IAAK1B,EAAYO,GAAIoB,MAAO3B,EAAYO,IAAKP,EAAYsB,aAP5H6C,EAAA,CAAyCP,aCwD1BY,cAlDb,SAAAA,EAAY9D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAR,KAAAoE,IAChB7D,EAAAC,OAAAE,EAAA,EAAAF,CAAAR,KAAAQ,OAAAG,EAAA,EAAAH,CAAA4D,GAAAxD,KAAAZ,KAAMM,KAUR+D,aAAe,SAAAnF,GACbqB,EAAKM,OAAO+C,QACVrD,EAAK+D,cAAcJ,SAAS3C,MAC5BhB,EAAKgE,mBAAmBL,SAAS3C,MACjChB,EAAKiE,WAAWjD,MAChBhB,EAAKkE,WAAWlD,MAChBhB,EAAKmE,YAAYnD,OACfoD,KAAK,SAAAC,GAAC,OAAIrE,EAAKsE,SAAS,CAACjB,QAASgB,OAhBtCrE,EAAKM,OAAS,IAAIpC,EAClB8B,EAAKO,MAAQ,CACX8C,QAAS,GACTO,aAAc,IAGhB5D,EAAKM,OAAOsD,eAAeQ,KAAK,SAAAC,GAAC,OAAIrE,EAAKsE,SAAS,CAACV,aAAcS,MARlDrE,wEAqBT,IAAAuE,EAAA9E,KACP,OACEwB,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACbvD,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,QACbvD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,UAAf,QACAxD,EAAAC,EAAAC,cAACuD,EAAD,CAAqB9E,GAAG,SAASgE,aAAcnE,KAAKc,MAAMqD,aAAcH,IAAK,SAAAC,GAAE,OAAIa,EAAKR,cAAgBL,KAExGzC,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,eAAf,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,CAAqB9E,GAAG,cAAcgE,aAAcnE,KAAKc,MAAMqD,aAAcH,IAAK,SAAAC,GAAE,OAAIa,EAAKP,mBAAqBN,KAClHzC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,iBAAf,kBACAxD,EAAAC,EAAAC,cAAA,SAAOvB,GAAG,gBAAgB6D,IAAK,SAAAC,GAAE,OAAIa,EAAKJ,YAAcT,GAAIiB,KAAK,OAAOhE,KAAK,kBAC7EM,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOvB,GAAG,UAAU6D,IAAK,SAAAC,GAAE,OAAIa,EAAKN,WAAaP,GAAIiB,KAAK,SAASC,YAAY,gBAAgBjE,KAAK,YAEpGM,EAAAC,EAAAC,cAAA,SAAOvB,GAAG,UAAU6D,IAAK,SAAAC,GAAE,OAAIa,EAAKL,WAAaR,GAAIiB,KAAK,SAASC,YAAY,gBAAgBjE,KAAK,YACpGM,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,SAAS3D,MAAM,YAAY6D,QAASpF,KAAKqE,gBAGvD7C,EAAAC,EAAAC,cAAC2D,EAAD,CAAYzB,QAAS5D,KAAKc,MAAM8C,kBA9CtBJ,aCME8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.b68fe2d7.chunk.js","sourcesContent":["export default class Client {\r\n\r\n    makeRequest(uri){\r\n        let result = new Promise((resolve, reject) => {\r\n            let request = new XMLHttpRequest();\r\n            request.open(\"GET\", uri, true);\r\n            request.onreadystatechange = (e) => {\r\n                if(request.readyState !== 4){\r\n                    return;\r\n                }\r\n\r\n               let raw = request.responseText;\r\n               let objectified = [];\r\n               try{\r\n                objectified = JSON.parse(raw);\r\n               } catch (ignore) {}\r\n               \r\n               resolve(objectified);\r\n            }\r\n            request.send();\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    flights(origin, destination, min, max, date){\r\n        return this.makeRequest(`/api/flights?originId=${origin}&destinationId=${destination}&costMin=${min}&costMax=${max}&departureDate=${date}`);\r\n    }\r\n\r\n    destinations(){\r\n        return this.makeRequest(`/api/destinations`);\r\n    }\r\n\r\n    getRouteFromId(id){\r\n        return this.makeRequest(`/api/routes/${id}`);\r\n    }\r\n\r\n    getDestinationFromId(id){\r\n        return this.makeRequest(`/api/destinations/${id}`);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Client from './Client';\r\n\r\nexport class Flight extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.client = new Client();\r\n\r\n    this.state = {\r\n      originName: this.props.flight.route.origin.name,\r\n      destinationName: this.props.flight.route.destination.name\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {\r\n          [\r\n          <td key=\"0\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://www.duckduckgo.com?q=flight+from+${this.props.flight.route.origin.name}+to+${this.props.flight.route.destination.name}`}>{this.props.flight.id}</a></td>,\r\n          <td key=\"1\">{this.props.flight.route.origin.name}</td>,\r\n          <td key=\"2\">{this.props.flight.route.destination.name}</td>,\r\n          <td key=\"3\">{this.dateString(this.formattedDate(this.props.flight.departureTime))}</td>,\r\n          <td key=\"4\">{this.timeString(this.formattedDate(this.props.flight.departureTime))}</td>,\r\n          <td key=\"5\">{this.minuteFormat(this.props.flight.route.duration)}</td>,\r\n          <td key=\"6\">â‚¬ {this.props.flight.cost.toFixed(2)}</td>\r\n          ]\r\n        }\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  dateString(date){\r\n    return `${this.numberFormat(date.getDate())}-${this.numberFormat(date.getMonth())}-${date.getFullYear()}`;\r\n  }\r\n\r\n  timeString(date){\r\n    return `${this.numberFormat(date.getHours())}:${this.numberFormat(date.getMinutes())}`\r\n  }\r\n\r\n  formattedDate(dateTime){\r\n    const dateTimeParts = dateTime.split(/[-T:+]/);\r\n    return new Date(...dateTimeParts);\r\n  }\r\n\r\n  numberFormat(number){\r\n    return (\"0\" + number).slice(-2);\r\n  }\r\n\r\n  minuteFormat(number){\r\n\r\n    let hours = Math.floor(number / 60);\r\n    let minutes = number % 60;\r\n\r\n    return this.numberFormat(hours) + \":\" + this.numberFormat(minutes); \r\n\r\n  }\r\n}\r\n\r\nexport default Flight\r\n","import React, { Component } from 'react'\r\nimport Flight from \"./Flight\"\r\n\r\nexport class FlightList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Flight ID</th>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Date (dd-mm-yyyy)</th>\r\n              <th>Departing Time (24h)</th>\r\n              <th>Flight Duration (hh:MM)</th>\r\n              <th>Price</th>\r\n            </tr>\r\n            {\r\n                this.props.flights.map(flight => <Flight key={flight.id} flight={flight}/>)\r\n            }\r\n          </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FlightList\r\n","import React, { Component } from 'react'\r\n\r\nexport class DestinationSelector extends Component {\r\n\r\n    render() {\r\n      return (\r\n          <select id={this.props.id} ref={el => this.selector = el}>\r\n              <option value=\"-1\">None</option>\r\n              {\r\n                this.props.destinations.map(destination => <option key={destination.id} value={destination.id}>{destination.name}</option>)\r\n              }\r\n          </select>\r\n      )\r\n    }\r\n}\r\n\r\nexport default DestinationSelector\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport FlightList from './compontents/FlightList';\nimport Client from './compontents/Client';\nimport DestinationSelector from './compontents/DestinationSelector';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.client = new Client();\n    this.state = {\n      flights: [],\n      destinations: []\n    };\n\n    this.client.destinations().then(r => this.setState({destinations: r}));\n  }\n\n  handleSubmit = e => {\n    this.client.flights(\n      this.originElement.selector.value, \n      this.destinationElement.selector.value, \n      this.minElement.value, \n      this.maxElement.value,\n      this.dateElement.value\n      ).then(r => this.setState({flights: r}));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"form\">\n          <label htmlFor=\"origin\">From</label>\n          <DestinationSelector id=\"origin\" destinations={this.state.destinations} ref={el => this.originElement = el} />\n\n          <label htmlFor=\"destination\">To</label>\n          <DestinationSelector id=\"destination\" destinations={this.state.destinations} ref={el => this.destinationElement = el} />\n          <br />\n\n          <label htmlFor=\"departureDate\">Departure Date</label>\n          <input id=\"departureDate\" ref={el => this.dateElement = el} type=\"date\" name=\"departureDate\" />\n          <br />\n\n          <input id=\"costMin\" ref={el => this.minElement = el} type=\"number\" placeholder=\"Minimum Price\" name=\"costMin\" />\n\n          <input id=\"costMax\" ref={el => this.maxElement = el} type=\"number\" placeholder=\"Maximum Price\" name=\"costMax\" />\n          <br />\n\n          <input type=\"submit\" value=\"Search...\" onClick={this.handleSubmit} />\n        </div>\n\n        <FlightList flights={this.state.flights} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}